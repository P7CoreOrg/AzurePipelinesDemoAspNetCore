    
# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
    - develop
  paths:
    exclude:
    - README.md
    - CHANGELOG.md
    - CONTRIBUTING.md

pool:
  vmImage: 'vs2017-win2016'

variables:
  BuildConfiguration: 'Release'
  DotNetCoreVersion: '2.2.203'
  BuildPlatform: 'Any CPU'
  SolutionName: 'TheSolution'
  major: 1
  minor: 0
  # creates a counter called versioncounter and seeds it at 100 and then assigns the value to a variable named buildNo.
  buildNo: $[counter('geomversioncounter', 100)]
  version: '$(major).$(minor).$(buildNo)'
  PreReleaseVersion: '$(major).0.$(minor)-beta-1'
  DoPreRelease: false 

steps:
  - script: echo Build.Reason:$(Build.Reason) version:$(version) DoPreRelease:$(DoPreRelease)
    displayName: 'BuildNumber'
  
  - task: DotNetCoreInstaller@0
    displayName: Install .NET Core $(DotNetCoreVersion)
    inputs:
      version: $(DotNetCoreVersion)
  - script: dotnet restore ./src/$(SolutionName).sln
    displayName: dotnet restore 

  - script: dotnet build --configuration $(buildConfiguration) /p:AssemblyVersion=$(version) ./src/$(SolutionName).sln
    displayName: 'dotnet build $(buildConfiguration)'

  # do this after your tests have run
  
  - script: dotnet test ./src/xUnit_TheWebAppTests/xUnit_TheWebAppTests.csproj --logger trx --collect "Code coverage"
    displayName: dotnet test xUnit_TheWebAppTests

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - script: dotnet  pack --include-source --include-symbols /property:Version=$(PreReleaseVersion)
    displayName: dotnet  pack PreRelease
    condition: and(succeeded(), eq(variables['DoPreRelease'], 'true'))
  
  - script: dotnet  pack --include-source --include-symbols /property:Version=$(version)-CI
    displayName: dotnet pack CI
    condition: and(succeeded(), eq(variables['DoPreRelease'], 'false'))
 

  - script: echo DoPreRelease:$(DoPreRelease)
    displayName: 'DoPreRelease TRUE'
    condition: and(succeeded(), eq(variables['DoPreRelease'], 'true'))